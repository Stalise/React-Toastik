{
  /* parser allow for ESLint to lint TS source code */
  "parser": "@typescript-eslint/parser",
  "plugins": ["react", "import", "jest", "@typescript-eslint", "prettier"],
  "extends": [
    "react-app",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "plugin:prettier/recommended"
  ],
  /* ability to disable some rules for certain file extensions */
  "overrides": [
    {
      "files": ["**/*.stories.tsx"],
      "rules": {
        "import/no-anonymous-default-export": "off"
      }
    }
  ],
  "env": {
    "browser": true,
    "node": true
  },
  "rules": {
    "prettier/prettier": 1,
    /* warning если использовать console.log */
    "no-console": 1,
    /* requires use of const for variables whose value doesn't change after declaration */
    "prefer-const": [
      1,
      {
        "destructuring": "all",
        "ignoreReadBeforeAssign": false
      }
    ],
    /* disables unused variables */
    "no-unused-vars": [
      1,
      {
        "args": "after-used",
        "caughtErrors": "none",
        "ignoreRestSiblings": true
      }
    ],
    /* empty string before return */
    "newline-before-return": 2,
    /* camelСase for variables */
    "camelcase": [
      2,
      {
        "properties": "always",
        "ignoreDestructuring": true
      }
    ],
    "arrow-body-style": [1, "as-needed"],
    "prefer-arrow-callback": 1,
    /* disallow unreachable code after */
    "no-unreachable": 2,
    /* disallow else blocks after return statements in if statements */
    "no-else-return": 2,
    /* prohibits useless return */
    "no-useless-return": 2,
    /* disallow empty block statements */
    "no-empty": 2,
    /* suppress errors for missing 'import React' in files */
    "react/react-in-jsx-scope": "off",
    /* prevent unnecessary path segments in import and require statements */
    "import/no-useless-path-segments": 2,
    /* prevent cycle imports */
    "import/no-cycle": 2,
    /* prohibits re-import */
    "import/no-duplicates": 2,
    /* throws an error if not all imports are at the beginning of the file */
    "import/first": 2,
    /* inserts an empty string after the last import */
    "import/newline-after-import": 2,
    /* doesn't allow meaningless line-to-line translations and regular expressions */
    "no-useless-escape": 1,
    /* checks arrays of dependencies for hooks */
    "react-hooks/exhaustive-deps": 1
  }
}
